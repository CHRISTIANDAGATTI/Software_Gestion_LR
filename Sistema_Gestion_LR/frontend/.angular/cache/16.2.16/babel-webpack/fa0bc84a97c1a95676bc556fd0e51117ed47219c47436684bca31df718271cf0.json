{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { StockService } from '../stock.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../stock.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CategoriaFormComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", cat_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cat_r1.nombre);\n  }\n}\nlet CategoriaFormComponent = /*#__PURE__*/(() => {\n  class CategoriaFormComponent {\n    constructor(route, router, stockService) {\n      this.route = route;\n      this.router = router;\n      this.stockService = stockService;\n      this.categoria = {\n        nombre: '',\n        categoria_padre: null\n      };\n      this.categorias = [];\n    }\n    ngOnInit() {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      // Cargar todas las categorías para el select\n      this.stockService.getCategoria().subscribe(data => {\n        this.categorias = data;\n        // Cargar la categoría actual para editar\n        this.stockService.getCategoria().subscribe(cats => {\n          const cat = cats.find(c => c.id === id);\n          if (cat) {\n            this.categoria = {\n              ...cat,\n              categoria_padre: cat.categoria_padre || null\n            };\n          }\n        });\n      });\n    }\n    guardarCambios() {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      this.stockService.updateCategoria(id, this.categoria).subscribe(() => {\n        alert('Categoría actualizada correctamente');\n        this.router.navigate(['/stock']); // volver al listado\n      });\n    }\n\n    static {\n      this.ɵfac = function CategoriaFormComponent_Factory(t) {\n        return new (t || CategoriaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StockService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CategoriaFormComponent,\n        selectors: [[\"app-categoria-form\"]],\n        decls: 14,\n        vars: 4,\n        consts: [[3, \"ngSubmit\"], [\"name\", \"nombre\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"categoria_padre\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"]],\n        template: function CategoriaFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Editar Categor\\u00EDa\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function CategoriaFormComponent_Template_form_ngSubmit_2_listener() {\n              return ctx.guardarCambios();\n            });\n            i0.ɵɵelementStart(3, \"label\");\n            i0.ɵɵtext(4, \"Nombre de la Categor\\u00EDa:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 1);\n            i0.ɵɵlistener(\"ngModelChange\", function CategoriaFormComponent_Template_input_ngModelChange_5_listener($event) {\n              return ctx.categoria.nombre = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"label\");\n            i0.ɵɵtext(7, \"Categor\\u00EDa padre:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"select\", 2);\n            i0.ɵɵlistener(\"ngModelChange\", function CategoriaFormComponent_Template_select_ngModelChange_8_listener($event) {\n              return ctx.categoria.categoria_padre = $event;\n            });\n            i0.ɵɵelementStart(9, \"option\", 3);\n            i0.ɵɵtext(10, \"Sin categor\\u00EDa padre\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, CategoriaFormComponent_option_11_Template, 2, 2, \"option\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 5);\n            i0.ɵɵtext(13, \"Guardar Cambios\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngModel\", ctx.categoria.nombre);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx.categoria.categoria_padre);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngValue\", null);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.categorias);\n          }\n        },\n        dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return CategoriaFormComponent;\n})();\nexport { CategoriaFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}