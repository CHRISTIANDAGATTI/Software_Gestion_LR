{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { StockService } from '../stock.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../stock.service\";\nimport * as i3 from \"@angular/forms\";\nlet ProductoFormComponent = /*#__PURE__*/(() => {\n  class ProductoFormComponent {\n    constructor(route, router, stockService) {\n      this.route = route;\n      this.router = router;\n      this.stockService = stockService;\n      this.producto = {\n        nombre: '',\n        descripcion: '',\n        precio: 0,\n        categoria: null\n      };\n      this.categorias = [];\n      this.isEdit = false;\n    }\n    ngOnInit() {\n      // Cargar categorías\n      this.stockService.getCategoria().subscribe(cats => {\n        this.categorias = cats;\n        // Si es edición, cargar producto\n        const id = this.route.snapshot.paramMap.get('id');\n        if (id) {\n          this.isEdit = true;\n          this.stockService.getProducto(Number(id)).subscribe(data => {\n            this.producto = data;\n            // Si la categoría viene anidada, tomar solo el id\n            if (this.producto.categoria && typeof this.producto.categoria === 'object') {\n              this.producto.categoria = this.producto.categoria.id;\n            }\n          });\n        }\n      });\n    }\n    guardar() {\n      if (this.isEdit) {\n        // Asegurarse de enviar solo el id de la categoría\n        const productoAEnviar = {\n          ...this.producto,\n          categoria_id: this.producto.categoria\n        };\n        delete productoAEnviar.categoria;\n        this.stockService.updateProducto(this.producto.id, productoAEnviar).subscribe(() => {\n          this.router.navigate(['/stock']);\n        });\n      }\n    }\n    static {\n      this.ɵfac = function ProductoFormComponent_Factory(t) {\n        return new (t || ProductoFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StockService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ProductoFormComponent,\n        selectors: [[\"app-producto-form\"]],\n        decls: 14,\n        vars: 3,\n        consts: [[3, \"ngSubmit\"], [\"name\", \"nombre\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"descripcion\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"precio\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n        template: function ProductoFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Editar Producto\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function ProductoFormComponent_Template_form_ngSubmit_2_listener() {\n              return ctx.guardar();\n            });\n            i0.ɵɵelementStart(3, \"label\");\n            i0.ɵɵtext(4, \"Nombre:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 1);\n            i0.ɵɵlistener(\"ngModelChange\", function ProductoFormComponent_Template_input_ngModelChange_5_listener($event) {\n              return ctx.producto.nombre = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"label\");\n            i0.ɵɵtext(7, \"Descripci\\u00F3n:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 2);\n            i0.ɵɵlistener(\"ngModelChange\", function ProductoFormComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.producto.descripcion = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"label\");\n            i0.ɵɵtext(10, \"Precio:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function ProductoFormComponent_Template_input_ngModelChange_11_listener($event) {\n              return ctx.producto.precio = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 4);\n            i0.ɵɵtext(13, \"Guardar Cambios\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngModel\", ctx.producto.nombre);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx.producto.descripcion);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx.producto.precio);\n          }\n        },\n        dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return ProductoFormComponent;\n})();\nexport { ProductoFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}